<?php
declare(strict_types=1);

namespace App\Model\Security;

use App\Model\Authorizator;
use App\Model\Orm;
use Nette\Security\IAuthenticator;
use Nette\Security\IAuthorizator;
use Nette\Security\IUserStorage;

/**
 * Class User
 * @package App\Model\Security
 * @property-read \App\Model\User $user
 */
class User extends \Nette\Security\User
{
    /** @var Orm */
    private $orm;

    /** @var \App\Model\User */
    private $user;

    public function __construct(Orm $orm, IUserStorage $storage, IAuthenticator $authenticator = null, IAuthorizator $authorizator = null)
    {
      $this->orm = $orm;
      parent::__construct($storage, $authenticator, $authorizator);
    }

    public function getUser(): ?\App\Model\User
    {
        if ($this->isLoggedIn()) {
            /** @var \App\Model\User|null $user */
            $user = $this->orm->users->getById($this->id);
            if ($user == null) {
                $this->logout(true);
                return null;
            } else {
                $this->user = $user;
                return $this->user;
            }
        } else {
            return null;
        }
    }

    public function isAllowed(mixed $resource = \Nette\Security\Authorizator::ALL,mixed $privilege = \Nette\Security\Authorizator::ALL): bool
    {
        return parent::isAllowed($resource, $privilege); // TODO: Change the autogenerated stub
    }
}